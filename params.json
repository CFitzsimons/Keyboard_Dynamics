{"name":"Keyboard dynamics","tagline":"","body":"Keyboard dynamics for intrusion detection\r\n=========================================\r\nThe primary goal of this project is to create a system to model a user's keyboard habits which can be used to detect potential intruders.  The program should actively monitor the userâ€˜s keystrokes and create useful statistics which can then be analysed to help detect intrusion. \r\n\r\nInitial goals of the project include:\r\nCreate a program which will prompt the user to enter their password into a terminal window n times.\r\nUse a SystemTap script to monitor system calls and keystrokes which is then outputted to a text file.\r\nAnalyze this output within the program and perform various statistical operations on it to create a user profile.\r\nUse this statistical information to determine if subsequent attempts to enter the password belong to the original user.\r\n\r\nFurther goals of the project include:\r\nIntegrate this method of detection into the Linux authentication system.\r\nCreate a GUI to allow the user to quickly set up their profile.\r\nEncrypt the password data pulled from the SystemTap script to help prevent potential security threats. \r\nCreate a secure system in which the user can bypass the detection in the case that they cannot replicate their own keystrokes.\r\n\r\nThe further goals will be planned and implemented once the initial system is in place and satisfactory/stable.  It is expected that most of the extended goals should be reached.  However, it should be noted that these are additions to the system and are not part of the core requirements defined above.  \r\n\r\n\r\nProgramming Languages\r\n---------------------\r\nThe keyboard tracking will be done by a scripting language called Systemtap which should create an output file that can be further analysed.  The system will primarily be designed in C/C++.  \r\n\r\n\r\n\r\nProgramming Tools\r\n-----------------\r\ng++/gcc for (C/C++ compiling)\r\nGithub (Collaboration, Version Control and Sharing)\r\n\r\n\r\nLearning challenges\r\n-  Systemtap scripting language.\r\n-  Statistical analysis.\r\n-  OS specific C programming\r\n-  Version Control and online collaboration\r\n\r\nHardware/Software Platform\r\n--------------------------\r\nThe only required platform for this project is the Fedora OS which we are targeting our program at.  \r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}